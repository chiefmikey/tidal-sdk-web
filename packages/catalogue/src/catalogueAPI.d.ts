/* eslint-disable */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** WithRequired type helpers */
type WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };

export interface paths {
  "/videos": {
    /**
     * Get multiple videos
     * @description Retrieve a list of video details by TIDAL video ids.
     */
    get: operations["getVideosByIds"];
  };
  "/videos/{id}": {
    /**
     * Get single video
     * @description Retrieve video details by TIDAL video id.
     */
    get: operations["getVideo"];
  };
  "/tracks": {
    /**
     * Get multiple tracks
     * @description Retrieve a list of track details by TIDAL track ids.
     */
    get: operations["getTracksByIds"];
  };
  "/tracks/{trackId}/similar": {
    /**
     * Get similar tracks for the given track
     * @description This endpoint can be used to retrieve a list of tracks similar to the given track.
     */
    get: operations["getSimilarTracks"];
  };
  "/tracks/{id}": {
    /**
     * Get single track
     * @description Retrieve track details by TIDAL track id.
     */
    get: operations["getTrack"];
  };
  "/tracks/byIsrc": {
    /**
     * Get tracks by ISRC
     * @description Retrieve a list of track details by ISRC
     */
    get: operations["getTracksByIsrc"];
  };
  "/artists": {
    /**
     * Get multiple artists
     * @description Retrieve a list of artist details by TIDAL artist ids.
     */
    get: operations["getArtistsByIds"];
  };
  "/artists/{id}": {
    /**
     * Get single artist
     * @description Retrieve artist details by TIDAL artist id.
     */
    get: operations["getArtist"];
  };
  "/artists/{artistId}/tracks": {
    /**
     * Get tracks by artist
     * @description Retrieve a list of tracks made by the specified artist
     */
    get: operations["getArtistTracks"];
  };
  "/artists/{artistId}/similar": {
    /**
     * Get similar artists for the given artist
     * @description This endpoint can be used to retrieve a list of artists similar to the given artist.
     */
    get: operations["getSimilarArtists"];
  };
  "/artists/{artistId}/albums": {
    /**
     * Get albums by artist
     * @description Retrieve a list of albums by TIDAL artist id.
     */
    get: operations["getArtistAlbums"];
  };
  "/albums/{id}": {
    /**
     * Get single album
     * @description Retrieve album details by TIDAL album id.
     */
    get: operations["getAlbum"];
  };
  "/albums/{albumId}/similar": {
    /**
     * Get similar albums for the given album
     * @description This endpoint can be used to retrieve a list of albums similar to the given album.
     */
    get: operations["getSimilarAlbums"];
  };
  "/albums/{albumId}/items": {
    /**
     * Get album items
     * @description Retrieve a list of album items - tracks & videos - by TIDAL album id. This endpoint require additional pagination-related properties: 'offset' and 'limit'. The 'items' property in the response might contain both tracks and videos that can be distinguished by the 'artifactType' property.
     */
    get: operations["getAlbumItems"];
  };
  "/albums/byIds": {
    /**
     * Get multiple albums
     * @description Retrieve a list of album details by TIDAL album ids. Returns multi-status response object containing execution status per each item.
     */
    get: operations["getAlbumsByIds"];
  };
  "/albums/byBarcodeId": {
    /**
     * Get albums by barcode id
     * @description Retrieve a list of album details by barcode id.
     */
    get: operations["getAlbumsByBarcodeId"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      /**
       * @description Error category
       * @enum {string}
       */
      category: "API_ERROR" | "INVALID_REQUEST_ERROR" | "RATE_LIMIT_ERROR" | "AUTHENTICATION_ERROR";
      /** @description Error code, can be used for programmatic parsing */
      code: string;
      /**
       * @description Human-readable notes regarding the error
       * @example The resource doesnt support the requested HTTP method: POST
       */
      detail?: string;
      /**
       * @description Name of the field that somehow triggers the problem
       * @example barcodeId
       */
      field?: string;
    };
    "Errors Response": {
      /** @description List of errors */
      errors: components["schemas"]["Error"][];
    };
    "Image Resource": {
      /**
       * @description Resource url for this particular dimension
       * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
       */
      url: string;
      /**
       * Format: int32
       * @description Dimension width in pixels
       * @example 80
       */
      width: number;
      /**
       * Format: int32
       * @description Dimension height in pixels
       * @example 80
       */
      height: number;
    };
    "Multi-Status Response Data:Video": {
      resource: components["schemas"]["Video"];
      /**
       * @description Relevant resource item identifier
       * @example 4328473
       */
      id: string;
      /**
       * Format: int32
       * @description Execution HTTP status relevant to this resource item
       * @example 200
       */
      status: number;
      /**
       * @description Execution message relevant to this resource item
       * @example success
       */
      message: string;
    };
    /** @description Metadata of the multi-status response */
    "Multi-Status Response Metadata": {
      /**
       * Format: int64
       * @description The requested amount of items
       * @example 10
       */
      requested: number;
      /**
       * Format: int64
       * @description The number of the successfully retrieved items
       * @example 8
       */
      success: number;
      /**
       * Format: int64
       * @description The number of the failed item retrievals
       * @example 2
       */
      failure: number;
    };
    /** @description Catalog item's provider information. Conditionally visible. */
    ProviderInfo: {
      /**
       * @description Provider unique ID. Conditionally visible.
       * @example 12
       */
      providerId?: string;
      /**
       * @description Provider name. Conditionally visible.
       * @example Columbia/Legacy
       */
      providerName?: string;
    };
    /** @description Album details */
    "Simple Album": {
      /**
       * @description TIDAL album id
       * @example 75413011
       */
      id: string;
      /**
       * @description Original title
       * @example 4:44
       */
      title: string;
      /** @description Cover images in different dimensions */
      imageCover?: components["schemas"]["Image Resource"][];
      /** @description Video cover in different dimensions */
      videoCover?: components["schemas"]["Video Resource"][];
    };
    "Simple Artist": {
      /**
       * @description TIDAL artist id
       * @example 7804
       */
      id: string;
      /**
       * @description Artist name
       * @example JAY Z
       */
      name: string;
      /** @description List of artist pictures in different dimensions */
      picture?: components["schemas"]["Image Resource"][];
      /**
       * @description Lead or secondary artist on album
       * @example true
       */
      main: boolean;
    };
    Video: WithRequired<{
      artifactType: "video";
    } & Omit<components["schemas"]["Album Item"], "artifactType"> & {
      image?: components["schemas"]["Image Resource"][];
      /**
       * Format: date
       * @description Video release date
       * @example 2017-06-27
       */
      releaseDate?: string;
      properties?: components["schemas"]["Video Properties"];
    }, "album" | "copyright" | "duration" | "id" | "isrc" | "popularity" | "releaseDate" | "tidalUrl" | "title" | "trackNumber" | "version" | "volumeNumber">;
    "Video Resource": {
      /**
       * @description Resource url for this particular dimension
       * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
       */
      url: string;
      /**
       * Format: int32
       * @description Dimension width in pixels
       * @example 80
       */
      width: number;
      /**
       * Format: int32
       * @description Dimension height in pixels
       * @example 80
       */
      height: number;
    };
    "Videos Multi-Status Response": {
      /** @description List of videos with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Video"][];
      metadata: components["schemas"]["Multi-Status Response Metadata"];
    };
    "Video Resource Aware Response": {
      resource: components["schemas"]["Video"];
    };
    MediaMetadata: {
      /**
       * @description Media metadata tags
       * @example HIRES_LOSSLESS
       */
      tags?: string[];
    };
    "Multi-Status Response Data:Track": {
      resource: components["schemas"]["Track"];
      /**
       * @description Relevant resource item identifier
       * @example 4328473
       */
      id: string;
      /**
       * Format: int32
       * @description Execution HTTP status relevant to this resource item
       * @example 200
       */
      status: number;
      /**
       * @description Execution message relevant to this resource item
       * @example success
       */
      message: string;
    };
    Track: WithRequired<{
      artifactType: "track";
    } & Omit<components["schemas"]["Album Item"], "artifactType"> & {
      mediaMetadata?: components["schemas"]["MediaMetadata"];
      properties?: components["schemas"]["Track Properties"];
    }, "album" | "copyright" | "duration" | "id" | "isrc" | "popularity" | "tidalUrl" | "title" | "trackNumber" | "version" | "volumeNumber">;
    "Tracks Multi-Status Response": {
      /** @description List of tracks with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Track"][];
      metadata: components["schemas"]["Multi-Status Response Metadata"];
    };
    "Pagination Aware Similar Track Response": {
      /** @description List of tracks */
      data?: components["schemas"]["Resource-Aware Item:Sole Id Track"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    /** @description Metadata, e.g. total count */
    "Pagination-Aware Response Metadata": {
      /**
       * Format: int64
       * @description Total amount of available items for limit-offset based requests
       * @example 10
       */
      total: number;
    };
    "Resource-Aware Item:Sole Id Track": {
      resource: components["schemas"]["Sole Id Track"];
    };
    /** @description Response nested resource */
    "Sole Id Track": {
      /**
       * @description Album item (track or video) TIDAL id
       * @example 251380837
       */
      id: string;
    };
    "Track Resource Aware Response": {
      resource: components["schemas"]["Track"];
    };
    /** @description Response nested resource */
    Artist: {
      /**
       * @description TIDAL artist id
       * @example 7804
       */
      id: string;
      /**
       * @description Artist name
       * @example JAY Z
       */
      name: string;
      /** @description List of artist pictures in different dimensions */
      picture?: components["schemas"]["Image Resource"][];
      /**
       * @description Web address that can be used to access TIDAL artist page and can also be shared with others
       * @example https://tidal.com/browse/artist/1566
       */
      tidalUrl: string;
      /**
       * Format: double
       * @description Artist popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
    };
    "Artists Multi-Status Response": {
      /** @description List of artists with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Artist"][];
      metadata: components["schemas"]["Multi-Status Response Metadata"];
    };
    "Multi-Status Response Data:Artist": {
      resource: components["schemas"]["Artist"];
      /**
       * @description Relevant resource item identifier
       * @example 4328473
       */
      id: string;
      /**
       * Format: int32
       * @description Execution HTTP status relevant to this resource item
       * @example 200
       */
      status: number;
      /**
       * @description Execution message relevant to this resource item
       * @example success
       */
      message: string;
    };
    "Artist Resource Aware Response": {
      resource: components["schemas"]["Artist"];
    };
    "Multi Status Pagination Aware Tracks Response": {
      /** @description List of tracks with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Track"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    "Pagination Aware Similar Artists Response": {
      /** @description List of artists */
      data?: components["schemas"]["Resource-Aware Item:Sole Id Artist"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    "Resource-Aware Item:Sole Id Artist": {
      resource: components["schemas"]["Sole Id Artist"];
    };
    /** @description Response nested resource */
    "Sole Id Artist": {
      /**
       * @description TIDAL artist id
       * @example 1566
       */
      id: string;
    };
    /** @description Response nested resource */
    Album: {
      /**
       * @description TIDAL album id
       * @example 75413011
       */
      id: string;
      /**
       * @description Barcode id (EAN-13 or UPC-A)
       * @example 00854242007552
       */
      barcodeId: string;
      /**
       * @description Original title
       * @example 4:44
       */
      title: string;
      /** @description Contributing artists */
      artists?: components["schemas"]["Simple Artist"][];
      /**
       * Format: int32
       * @description Duration (in seconds)
       * @example 2777
       */
      duration: number;
      /**
       * Format: date
       * @description Release date (ISO-8601)
       * @example 2017-06-30
       */
      releaseDate: string;
      /** @description Cover images in different dimensions */
      imageCover?: components["schemas"]["Image Resource"][];
      /** @description Video cover in different dimensions */
      videoCover?: components["schemas"]["Video Resource"][];
      /**
       * Format: int32
       * @description Number of volumes
       * @example 1
       */
      numberOfVolumes: number;
      /**
       * Format: int32
       * @description Number of tracks
       * @example 13
       */
      numberOfTracks: number;
      /**
       * Format: int32
       * @description Number of videos
       * @example 0
       */
      numberOfVideos: number;
      /**
       * @description Type: album, single or extended play
       * @enum {string}
       */
      type: "ALBUM" | "EP" | "SINGLE";
      /**
       * @description Copyright information
       * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
       */
      copyright: string;
      mediaMetadata: components["schemas"]["MediaMetadata"];
      properties?: components["schemas"]["Album Properties"];
      /**
       * @description Web address that can be used to access TIDAL album page and can also be shared with others
       * @example https://tidal.com/browse/album/251380836
       */
      tidalUrl: string;
      providerInfo?: components["schemas"]["ProviderInfo"];
      /**
       * Format: double
       * @description Album popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
    };
    "Multi Status Pagination Aware Albums Response": {
      /** @description List of albums with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Album"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    "Multi-Status Response Data:Album": {
      resource: components["schemas"]["Album"];
      /**
       * @description Relevant resource item identifier
       * @example 4328473
       */
      id: string;
      /**
       * Format: int32
       * @description Execution HTTP status relevant to this resource item
       * @example 200
       */
      status: number;
      /**
       * @description Execution message relevant to this resource item
       * @example success
       */
      message: string;
    };
    "Album Resource Aware Response": {
      resource: components["schemas"]["Album"];
    };
    "Pagination Aware Similar Album Response": {
      /** @description List of albums */
      data?: components["schemas"]["Resource-Aware Item:Sole Id Album"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    "Resource-Aware Item:Sole Id Album": {
      resource: components["schemas"]["Sole Id Album"];
    };
    /** @description Response nested resource */
    "Sole Id Album": {
      /**
       * @description TIDAL album id
       * @example 251380836
       */
      id: string;
    };
    /** @description Response nested resource */
    "Album Item": {
      properties?: {
        [key: string]: string[];
      };
      /**
       * @description Album item (track or video) TIDAL id
       * @example 75623239
       */
      id: string;
      /**
       * Format: int32
       * @description Duration (in seconds)
       * @example 30
       */
      duration: number;
      /**
       * @description Version of the album's item; complements title
       * @example Kill Jay Z
       */
      version: string;
      album: components["schemas"]["Simple Album"];
      /**
       * @description Title
       * @example Kill Jay Z
       */
      title: string;
      /**
       * @description ISRC code
       * @example TIDAL2274
       */
      isrc: string;
      /**
       * Format: int32
       * @description Video number
       * @example 30
       */
      trackNumber: number;
      /**
       * Format: int32
       * @description Volume number
       * @example 30
       */
      volumeNumber: number;
      /**
       * @description Copyright information
       * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
       */
      copyright: string;
      /** @description Contributing artists */
      artists?: components["schemas"]["Simple Artist"][];
      /**
       * Format: double
       * @description Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
      /**
       * @description Web address that can be used to access TIDAL track or video page and can also be shared with others
       * @example https://tidal.com/browse/track/251380837
       */
      tidalUrl: string;
      providerInfo?: components["schemas"]["ProviderInfo"];
      artifactType: string;
    };
    "Multi Status Pagination Aware Album Items Response": {
      /** @description List of album items with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Album Item"][];
      metadata: components["schemas"]["Pagination-Aware Response Metadata"];
    };
    "Multi-Status Response Data:Album Item": {
      resource: components["schemas"]["Track"] | components["schemas"]["Video"];
      /**
       * @description Relevant resource item identifier
       * @example 4328473
       */
      id: string;
      /**
       * Format: int32
       * @description Execution HTTP status relevant to this resource item
       * @example 200
       */
      status: number;
      /**
       * @description Execution message relevant to this resource item
       * @example success
       */
      message: string;
    };
    "Albums Multi-Status Response": {
      /** @description List of albums with relevant statuses and execution comment */
      data?: components["schemas"]["Multi-Status Response Data:Album"][];
      metadata: components["schemas"]["Multi-Status Response Metadata"];
    };
    /** @description Map of video-related properties. All properties are distributed across namespaces that acts as a map keys. Each namespace consists of list of related properties. The fact of the presence of a particular property effectively means that an item has this characteristic. */
    "Video Properties": {
      /** @example live-stream */
      "video-type"?: "live-stream"[];
      /** @example explicit */
      content?: "explicit"[];
    };
    /** @description Map of track-related properties. All properties are distributed across namespaces that acts as a map keys. Each namespace consists of list of related properties. The fact of the presence of a particular property effectively means that an item has this characteristic. */
    "Track Properties": {
      /** @example explicit */
      content?: "explicit"[];
    };
    /** @description Map of album-related properties. All properties are distributed across namespaces that acts as a map keys. Each namespace consists of list of related properties. The fact of the presence of a particular property effectively means that an item has this characteristic. */
    "Album Properties": {
      /** @example explicit */
      content?: "explicit"[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get multiple videos
   * @description Retrieve a list of video details by TIDAL video ids.
   */
  getVideosByIds: {
    parameters: {
      query: {
        /**
         * @description Comma-separated list of TIDAL video ids
         * @example 75623239,26136887
         */
        ids: string[];
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Videos Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get single video
   * @description Retrieve video details by TIDAL video id.
   */
  getVideo: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
      path: {
        /**
         * @description TIDAL video id
         * @example 75623239
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Video Resource Aware Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unavailable due to demand from the right-holders to prohibit access to the resource. */
      451: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get multiple tracks
   * @description Retrieve a list of track details by TIDAL track ids.
   */
  getTracksByIds: {
    parameters: {
      query: {
        /**
         * @description Comma-separated list of TIDAL owned track ids
         * @example 251380837,251380838
         */
        ids: string[];
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Tracks Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get similar tracks for the given track
   * @description This endpoint can be used to retrieve a list of tracks similar to the given track.
   */
  getSimilarTracks: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL id of the track
         * @example 251380837
         */
        trackId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Pagination Aware Similar Track Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unavailable due to demand from the right-holders to prohibit access to the resource. */
      451: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get single track
   * @description Retrieve track details by TIDAL track id.
   */
  getTrack: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
      path: {
        /**
         * @description TIDAL track id
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Track Resource Aware Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unavailable due to demand from the right-holders to prohibit access to the resource. */
      451: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get tracks by ISRC
   * @description Retrieve a list of track details by ISRC
   */
  getTracksByIsrc: {
    parameters: {
      query: {
        /**
         * @description Valid ISRC code (usually comprises 12 alphanumeric characters)
         * @example USSM12209515
         */
        isrc: string;
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Tracks Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get multiple artists
   * @description Retrieve a list of artist details by TIDAL artist ids.
   */
  getArtistsByIds: {
    parameters: {
      query: {
        /**
         * @description Comma-separated list of TIDAL artist ids
         * @example 1566,7804
         */
        ids: string[];
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Artists Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get single artist
   * @description Retrieve artist details by TIDAL artist id.
   */
  getArtist: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Artist Resource Aware Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get tracks by artist
   * @description Retrieve a list of tracks made by the specified artist
   */
  getArtistTracks: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Collapse by options for getting artist tracks. Available options: FINGERPRINT, ID. FINGERPRINT option might collapse similar tracks based item fingerprints while collapsing by ID always returns all available items.
         * @example FINGERPRINT
         */
        collapseBy?: "FINGERPRINT" | "ID";
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        artistId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Multi Status Pagination Aware Tracks Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get similar artists for the given artist
   * @description This endpoint can be used to retrieve a list of artists similar to the given artist.
   */
  getSimilarArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL id of the artist
         * @example 1566
         */
        artistId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Pagination Aware Similar Artists Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get albums by artist
   * @description Retrieve a list of albums by TIDAL artist id.
   */
  getArtistAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        artistId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Multi Status Pagination Aware Albums Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get single album
   * @description Retrieve album details by TIDAL album id.
   */
  getAlbum: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Album Resource Aware Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unavailable due to demand from the right-holders to prohibit access to the resource. */
      451: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get similar albums for the given album
   * @description This endpoint can be used to retrieve a list of albums similar to the given album.
   */
  getSimilarAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        albumId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Pagination Aware Similar Album Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get album items
   * @description Retrieve a list of album items - tracks & videos - by TIDAL album id. This endpoint require additional pagination-related properties: 'offset' and 'limit'. The 'items' property in the response might contain both tracks and videos that can be distinguished by the 'artifactType' property.
   */
  getAlbumItems: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /**
         * @description Pagination offset (in number of items)
         * @example 0
         */
        offset?: number;
        /**
         * @description Page size
         * @example 10
         */
        limit?: number;
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        albumId: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Multi Status Pagination Aware Album Items Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get multiple albums
   * @description Retrieve a list of album details by TIDAL album ids. Returns multi-status response object containing execution status per each item.
   */
  getAlbumsByIds: {
    parameters: {
      query: {
        /**
         * @description Comma-separated list of TIDAL album ids
         * @example 251380836,275646830
         */
        ids: string[];
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Albums Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
  /**
   * Get albums by barcode id
   * @description Retrieve a list of album details by barcode id.
   */
  getAlbumsByBarcodeId: {
    parameters: {
      query: {
        /**
         * @description Barcode id in EAN-13 or UPC-A format
         * @example 196589525444
         */
        barcodeId: string;
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.tidal.v1+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      207: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Albums Multi-Status Response"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.tidal.v1+json": components["schemas"]["Errors Response"];
        };
      };
    };
  };
}
